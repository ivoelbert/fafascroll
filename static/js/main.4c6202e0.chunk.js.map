{"version":3,"sources":["Lib/utils/utils.ts","Lib/context/ScrollerContext.tsx","Lib/hooks/useScrollerContext.ts","Lib/components/Scroller/Scroller.tsx","Lib/context/SectionContext.tsx","Lib/components/Section/Section.tsx","Lib/hooks/useScollPosition.ts","Components/Phone/ObjLoader.ts","Components/Phone/PhoneObject.ts","Components/Phone/UIState.ts","Components/Phone/PhoneScene.ts","Components/Phone/Phone.tsx","Components/ScrollerPart/ScrollerPart.tsx","App.tsx","index.tsx"],"names":["animationTiming","time","from","to","clamp","mapValue","timeSlice","value","min","max","Math","num","in_min","in_max","out_min","out_max","easing","t","voidContext","getHeight","Error","addSection","_name","_height","isSectionVisible","scrollerRef","ScrollerContextValue","React","createContext","ScrollerProvider","children","useState","sections","setSections","scrollPos","position","setPosition","handler","useCallback","event","scrollY","window","useEffect","addEventListener","removeEventListener","useWindowScroll","winHeight","innerHeight","height","setHeight","useWindowHeight","useRef","themeHandler","sectionsHeight","length","sectionName","sectionHeight","find","name","newHeight","isVisible","heightOffset","current","el","yPos","offsetTop","clientTop","offsetParent","getPosition","normalizedScroll","queriedSectionIndex","findIndex","queriedSection","prevSectionHeight","Provider","useScrollerContext","useContext","Scroller","className","SectionsContainer","ref","style","SectionContextValue","relativePosition","absolutePosition","SectionProvider","AnimatedSection","posed","div","visible","opacity","hidden","Section","duration","isActive","zIndex","pose","useScrollPosition","ObjLoader","loader","loadObject","path","Promise","resolve","reject","objPath","load","gltf","scene","this","GLTFLoader","PhoneObject","mesh","loadModels","a","THREE","initialState","pullOutTime","moveAndRotateTime","UIState","_state","setState","stateData","emit","_instance","EventEmitter","phoneElem","renderer","camera","phone","add","animate","getInstance","on","state","positionTiming","newPositionZ","newRotationZ","PI","newPositionX","newRotationY","set","rotation","z","y","render","getDomElement","domElement","setSize","innerWidth","background","setHSL","fog","getHex","hemiLight","color","groundColor","dirLight","multiplyScalar","lookAt","aspect","updateProjectionMatrix","Phone","firstAnimationTiming","secondAnimationTiming","blurTiming","canvasStyle","filter","WebkitFilter","infoStyle","textIntroTiming","textContainerStyle","transform","node","appendChild","FirstSection","ScrollerPart","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4c6202e0.chunk.js","sourcesContent":["export const animationTiming = (time: number, from: number, to: number): number => {\n    return clamp(mapValue(time, from, to, 0, 1), 0, 1);\n};\n\nexport const timeSlice = (time: number, from: number, to: number): number => {\n    return clamp(mapValue(time, from, to, 0, 1), 0, 1);\n};\n\nexport const clamp = (value: number, min: number, max: number): number => {\n    return Math.min(Math.max(value, min), max);\n};\n\nexport const mapValue = (num: number, in_min: number, in_max: number, out_min: number, out_max: number): number => {\n    return ((num - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min;\n};\n\nexport type TabulateFunction<T> = (idx: number) => T;\nexport const tabulate = <T>(n: number, f: TabulateFunction<T>): T[] => {\n    return [...new Array(n)].map((_, idx: number): T => f(idx));\n};\n\nexport const lerpColor = (a: string, b: string, amount: number) => {\n    var ah = +a.replace('#', '0x'),\n        ar = ah >> 16,\n        ag = (ah >> 8) & 0xff,\n        ab = ah & 0xff,\n        bh = +b.replace('#', '0x'),\n        br = bh >> 16,\n        bg = (bh >> 8) & 0xff,\n        bb = bh & 0xff,\n        rr = ar + amount * (br - ar),\n        rg = ag + amount * (bg - ag),\n        rb = ab + amount * (bb - ab);\n\n    return '#' + (((1 << 24) + (rr << 16) + (rg << 8) + rb) | 0).toString(16).slice(1);\n};\n\nexport const easing = {\n    // accelerating from zero velocity\n    inQuad: (t: number): number => t * t,\n    // decelerating to zero velocity\n    easeOutQuad: (t: number): number => t * (2 - t),\n    // acceleration until halfway, then deceleration\n    easeInOutQuad: (t: number): number => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t),\n\n    // accelerating from zero velocity\n    easeInCubic: (t: number): number => t * t * t,\n    // decelerating to zero velocity\n    easeOutCubic: (t: number): number => --t * t * t + 1,\n    // acceleration until halfway, then deceleration\n    easeInOutCubic: (t: number): number => (t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1),\n};\n","import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport { clamp, mapValue } from '../utils/utils';\n\ntype Section = { name: string; height: number };\n\nexport interface ScrollerContext {\n    getHeight: () => number;\n    addSection: (name: string, sectionHeight: number) => void;\n    isSectionVisible: (name: string) => [boolean, number];\n    scrollerRef: React.RefObject<HTMLDivElement> | null;\n}\n\n// Default context, SHOULDN'T HAPPEN\nconst voidContext: ScrollerContext = {\n    getHeight: () => {\n        throw new Error(\"Can't use context outside ScrollerProvider\");\n    },\n    addSection: (_name: string, _height: number) => {\n        throw new Error(\"Can't use context outside ScrollerProvider\");\n    },\n    isSectionVisible: (_name: string) => {\n        throw new Error(\"Can't use context outside ScrollerProvider\");\n    },\n    scrollerRef: null,\n};\n\nexport const ScrollerContextValue = React.createContext<ScrollerContext>(voidContext);\n\nconst getPosition = (el: HTMLElement) => {\n    var yPos = 0;\n\n    while (el) {\n        yPos += el.offsetTop + el.clientTop;\n        el = el.offsetParent as any;\n    }\n\n    return yPos;\n};\n\nconst useWindowScroll = (): number => {\n    const [position, setPosition] = useState(0);\n\n    const handler = useCallback((event: Event) => {\n        const { scrollY } = window;\n        setPosition(scrollY);\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener('scroll', handler);\n\n        return () => {\n            window.removeEventListener('scroll', handler);\n        };\n    }, [handler]);\n\n    return position;\n};\n\nconst useWindowHeight = (): number => {\n    const [height, setHeight] = useState(window.innerHeight);\n\n    const handler = useCallback((event: Event) => {\n        setHeight(window.innerHeight);\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener('resize', handler);\n\n        return () => {\n            window.removeEventListener('resize', handler);\n        };\n    }, [handler]);\n\n    return height;\n};\n\nexport const ScrollerProvider: React.FC = ({ children }) => {\n    const [sections, setSections] = useState<Section[]>([]);\n\n    const scrollPos: number = useWindowScroll();\n    const winHeight: number = useWindowHeight();\n\n    const scrollerRef = useRef<HTMLDivElement>(null);\n\n    const addSection = (sectionName: string, sectionHeight: number): void => {\n        // Bail out if that section is already in the state\n        if (sections.find(({ name }) => name === sectionName)) {\n            return;\n        }\n\n        setSections((sections: Section[]) => {\n            const oldHeight = sections.length > 0 ? sections[sections.length - 1].height : 0;\n            const newHeight = oldHeight + sectionHeight;\n            return [...sections, { name: sectionName, height: newHeight }];\n        });\n    };\n\n    const isSectionVisible = (name: string): [boolean, number] => {\n        if (sections.length === 0) {\n            return [false, 0];\n        }\n\n        const heightOffset = scrollerRef.current ? getPosition(scrollerRef.current) : 0;\n        const normalizedScroll = scrollPos - heightOffset;\n\n        const queriedSectionIndex: number = sections.findIndex(({ name: secName }) => secName === name);\n        const queriedSection: Section = sections[queriedSectionIndex];\n        const prevSectionHeight: number = queriedSectionIndex === 0 ? 0 : sections[queriedSectionIndex - 1].height;\n\n        let isVisible: boolean;\n        switch (queriedSectionIndex) {\n            case 0:\n                isVisible = normalizedScroll < queriedSection.height;\n                break;\n\n            case sections.length - 1:\n                isVisible = normalizedScroll > prevSectionHeight;\n                break;\n\n            default:\n                isVisible = normalizedScroll > prevSectionHeight && normalizedScroll < queriedSection.height;\n        }\n\n        const offset = clamp(mapValue(normalizedScroll, prevSectionHeight, queriedSection.height, 0, 1), 0, 1);\n\n        return [isVisible, offset];\n    };\n\n    const getHeight = useCallback((): number => {\n        const sectionsHeight: number = sections.length > 0 ? sections[sections.length - 1].height : 0;\n        return winHeight + sectionsHeight;\n    }, [sections, winHeight]);\n\n    const themeHandler: ScrollerContext = {\n        getHeight,\n        addSection,\n        isSectionVisible,\n        scrollerRef,\n    };\n\n    return <ScrollerContextValue.Provider value={themeHandler}>{children}</ScrollerContextValue.Provider>;\n};\n","import { useContext } from 'react';\nimport { ScrollerContextValue, ScrollerContext } from '../context/ScrollerContext';\n\nexport const useScrollerContext = (): ScrollerContext => {\n    return useContext<ScrollerContext>(ScrollerContextValue);\n}","import React from 'react';\nimport { ScrollerProvider } from '../../context/ScrollerContext';\nimport { useScrollerContext } from '../../hooks/useScrollerContext';\nimport './Scroller.scss';\n\ninterface ScrollerProps {\n    className?: string;\n}\n\nexport const Scroller: React.FC<ScrollerProps> = ({ children, className = '' }) => {\n    return (\n        <ScrollerProvider>\n            <SectionsContainer className={className}>{children}</SectionsContainer>\n        </ScrollerProvider>\n    );\n};\n\ninterface SectionsContainerProps {\n    className: string;\n}\n\nconst SectionsContainer: React.FC<SectionsContainerProps> = ({ children, className }) => {\n    const { getHeight, scrollerRef } = useScrollerContext();\n    const height: number = getHeight();\n\n    return (\n        <div ref={scrollerRef} className={`fafascroller-container ${className}`} style={{ height }}>\n            {children}\n        </div>\n    );\n};\n","import React from 'react';\n\nexport interface SectionContext {\n    relativePosition: number;\n    absolutePosition: number;\n}\n\n// Default context, SHOULDN'T HAPPEN\nconst voidContext: SectionContext = {\n    relativePosition: 0,\n    absolutePosition: 0,\n};\n\nexport const SectionContextValue = React.createContext<SectionContext>(voidContext);\n\ninterface Props {\n    relativePosition: number;\n    absolutePosition: number;\n}\n\nexport const SectionProvider: React.FC<Props> = ({ children, relativePosition, absolutePosition }) => {\n    const themeHandler: SectionContext = {\n        relativePosition,\n        absolutePosition,\n    };\n\n    return <SectionContextValue.Provider value={themeHandler}>{children}</SectionContextValue.Provider>;\n};\n","import React from 'react';\nimport { useScrollerContext } from '../../hooks/useScrollerContext';\nimport { SectionProvider } from '../../context/SectionContext';\nimport posed from 'react-pose';\n\ninterface Props {\n    duration: number;\n    name: string;\n}\n\nconst AnimatedSection = posed.div({\n    visible: { opacity: 1 },\n    hidden: { opacity: 0 },\n});\n\nexport const Section: React.FC<Props> = ({ children, duration, name }) => {\n    // Add the section\n    const { addSection, isSectionVisible } = useScrollerContext();\n    addSection(name, duration);\n\n    const [isActive, relativePosition] = isSectionVisible(name);\n    const absolutePosition = duration * relativePosition;\n\n    return (\n        <AnimatedSection style={{ zIndex: isActive ? 10 : 0 }} className=\"sticky-section\" pose={isActive ? 'visible' : 'hidden'}>\n            <SectionProvider relativePosition={relativePosition} absolutePosition={absolutePosition}>\n                {children}\n            </SectionProvider>\n        </AnimatedSection>\n    );\n};\n","import { useContext } from 'react';\nimport { SectionContextValue, SectionContext } from '../context/SectionContext';\n\nexport const useScrollPosition = (): SectionContext => {\n    return useContext<SectionContext>(SectionContextValue);\n};\n","import * as THREE from 'three';\nimport { GLTFLoader, GLTF } from 'three/examples/jsm/loaders/GLTFLoader';\n\nexport class ObjLoader {\n    private loader: GLTFLoader;\n\n    constructor() {\n        this.loader = new GLTFLoader();\n    }\n\n    public loadObject = (path: string): Promise<THREE.Object3D> => {\n        return new Promise((resolve, reject) => {\n            const basePath = `./models`;\n\n            const objPath: string = `${basePath}/${path}.gltf`;\n\n            const onLoad = (gltf: GLTF): void => {\n                resolve(gltf.scene)\n            }\n\n            this.loader.load(objPath, onLoad, () => {}, reject);\n        });\n    };\n}\n","import * as THREE from 'three';\nimport { ObjLoader } from './ObjLoader';\n\nexport class PhoneObject {\n    public mesh: THREE.Object3D;\n\n    constructor() {\n        this.mesh = new THREE.Object3D();\n    }\n\n    public loadModels = async (): Promise<void> => {\n        const loader = new ObjLoader();\n        this.mesh = await loader.loadObject('scene');\n    };\n}\n","import { EventEmitter } from 'events';\n\nexport type UIStateEntries = {\n    time: number;\n    pullOutTime: number,\n    moveAndRotateTime: number,\n};\n\nexport type UIStateKeys = keyof UIStateEntries;\n\nexport const initialState: UIStateEntries = {\n    time: 0,\n    pullOutTime: 0,\n    moveAndRotateTime: 0,\n};\n\nexport class UIState extends EventEmitter {\n    private _state: UIStateEntries;\n\n    private static _instance: UIState;\n    private constructor() {\n        super();\n        this._state = initialState;\n    }\n\n    public static getInstance(): UIState {\n        // Do you need arguments? Make it a regular static method instead.\n        return this._instance || (this._instance = new this());\n    }\n\n    public get state() {\n        return this._state;\n    }\n\n    // For now broadcast every state change\n    public setState = (stateData: UIStateEntries) => {\n        this._state = {\n            ...this._state,\n            ...stateData,\n        };\n\n        this.emit('CHANGE', this._state);\n    };\n}\n","import * as THREE from 'three';\nimport { PhoneObject } from './PhoneObject';\nimport { UIState, UIStateEntries } from './UIState';\nimport { mapValue, animationTiming } from '../../Lib/utils/utils';\n\nexport class PhoneScene {\n    private renderer: THREE.WebGLRenderer;\n    private scene: THREE.Scene;\n    private camera: THREE.PerspectiveCamera;\n\n    private phone: PhoneObject;\n\n    constructor() {\n        this.renderer = new THREE.WebGLRenderer();\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n\n        // Set the scene\n        this.scene = new THREE.Scene();\n        this.scene.background = new THREE.Color().setHSL(0.6, 0, 1);\n        this.scene.fog = new THREE.Fog(this.scene.background.getHex(), 1, 1000);\n\n        // Set the lights\n        const hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.6);\n        hemiLight.color.setHSL(0.6, 1, 0.6);\n        hemiLight.groundColor.setHSL(0.095, 1, 0.75);\n        hemiLight.position.set(0, 50, 0);\n        this.scene.add(hemiLight);\n\n        const dirLight = new THREE.DirectionalLight(0xffffff, 1);\n        dirLight.color.setHSL(0.1, 1, 0.95);\n        dirLight.position.set(-1, 1.75, 1);\n        dirLight.position.multiplyScalar(30);\n        this.scene.add(dirLight);\n\n        // Set camera\n        this.camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 1000);\n        this.camera.position.set(0, 0, 10);\n        this.camera.lookAt(0, 0, 0);\n\n        // Create the miata\n        this.phone = new PhoneObject();\n\n        window.addEventListener(\n            'resize',\n            () => {\n                this.camera.aspect = window.innerWidth / window.innerHeight;\n                this.camera.updateProjectionMatrix();\n                this.renderer.setSize(window.innerWidth, window.innerHeight);\n                this.renderer.render(this.scene, this.camera);\n            },\n            false\n        );\n\n        // Load Models asynchronously\n        this.loadModels();\n    }\n\n    private loadModels = async (): Promise<void> => {\n        await this.phone.loadModels();\n\n        this.scene.add(this.phone.mesh);\n\n        this.animate();\n    };\n\n    private animate = (): void => {\n        const uiState: UIState = UIState.getInstance();\n        uiState.on('CHANGE', (state: UIStateEntries) => {\n            const { pullOutTime, moveAndRotateTime } = state;\n\n            // Pull out animation\n            const positionTiming: number = animationTiming(pullOutTime, 0.5, 1);\n            const newPositionZ: number = mapValue(positionTiming, 0, 1, -5, -150);\n            const newRotationZ: number = mapValue(positionTiming, 0, 1, -Math.PI / 2, 0);\n\n            // Move and rotate animation\n            const newPositionX: number = mapValue(moveAndRotateTime, 0, 1, 0, -75);\n            const newRotationY: number = mapValue(moveAndRotateTime, 0, 1, 0, Math.PI / 1.6);\n\n            this.phone.mesh.position.set(newPositionX, 0, newPositionZ);\n            this.phone.mesh.rotation.z = newRotationZ;\n            this.phone.mesh.rotation.y = newRotationY;\n            this.renderer.render(this.scene, this.camera);\n        });\n    };\n\n    public getDomElement = (): HTMLCanvasElement => {\n        return this.renderer.domElement;\n    };\n}\n","import React from 'react';\nimport { PhoneScene } from './PhoneScene';\nimport { UIState } from './UIState';\nimport { useScrollPosition } from '../../Lib/hooks/useScollPosition';\nimport { animationTiming, mapValue, timeSlice, easing } from '../../Lib/utils/utils';\nimport './Phone.scss';\n\nconst phoneScene = new PhoneScene();\nconst phoneElem: HTMLCanvasElement = phoneScene.getDomElement();\n\nexport const Phone: React.FC = () => {\n    const { relativePosition, absolutePosition } = useScrollPosition();\n    const firstAnimationTiming = timeSlice(absolutePosition, 0, 1500);\n    const secondAnimationTiming = timeSlice(absolutePosition, 2000, 3000);\n\n    // Set the canvas' state each rerender.\n    UIState.getInstance().setState({\n        time: relativePosition,\n        pullOutTime: firstAnimationTiming,\n        moveAndRotateTime: secondAnimationTiming,\n    });\n\n    const refFunction = (node: HTMLDivElement | null): void => {\n        node && node.appendChild(phoneElem);\n    };\n\n    const blurTiming = animationTiming(firstAnimationTiming, 0, 0.9);\n    const maxBlur = 20;\n    const canvasStyle: React.CSSProperties = {\n        filter: `blur(${mapValue(blurTiming, 0, 1, maxBlur, 0)}px)`,\n        WebkitFilter: `blur(${mapValue(blurTiming, 0, 1, maxBlur, 0)}px)`,\n    };\n    const infoStyle: React.CSSProperties = {\n        opacity: secondAnimationTiming,\n    }\n\n    const textIntroTiming: number = easing.easeOutCubic(secondAnimationTiming)\n    const textContainerStyle: React.CSSProperties = {\n        transform: `translateX(${mapValue(textIntroTiming, 0, 1, 0, 6)}em)`,\n    }\n\n    return (\n        <div className=\"phone-animation-container\">\n            <div style={canvasStyle} className=\"phone-container\" ref={refFunction} />;\n            <div style={infoStyle} className=\"info-phone-container\">\n                <div style={textContainerStyle} className=\"text-container\">\n                    <h3>\n                        Una banda de keta.\n                    </h3>\n                    <p>\n                        Un kilo de merca escondanlo, porque el doctor va a tomarselo.\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { Scroller } from '../../Lib/components/Scroller/Scroller';\nimport { Section } from '../../Lib/components/Section/Section';\nimport { useScrollPosition } from '../../Lib/hooks/useScollPosition';\nimport { Phone } from '../Phone/Phone';\nimport './ScrollerPart.scss';\n\nconst FirstSection: React.FC = () => {\n    const { relativePosition } = useScrollPosition();\n\n    const style: React.CSSProperties = {\n        opacity: relativePosition,\n    }\n\n    return (\n        <div className=\"section first-section\">\n            <div style={style} className=\"white-backdrop\"></div>\n            <h1>0xFAFAFA</h1>\n        </div>\n    );\n};\n\nexport const ScrollerPart: React.FC = () => {\n    return (\n        <Scroller className=\"scroller-container\">\n            <Section name=\"first-section\" duration={1000}>\n                <FirstSection />\n            </Section>\n            <Section name=\"third-section\" duration={3000}>\n                <Phone />\n            </Section>\n        </Scroller>\n    );\n};\n","import React from 'react';\nimport { ScrollerPart } from './Components/ScrollerPart/ScrollerPart';\nimport './App.scss';\n\nconst App: React.FC = () => {\n    return (\n        <div>\n            <ScrollerPart />\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}